info:
  title: api
  version: 1.0.0
openapi: 3.1.0
paths:
  /cats-api/doggos/dogs/{dogId}:
    get:
      tags:
        - /cats-api/doggos
      responses: &a1
        "200":
          description: success
          content:
            application/json:>
              schema:
                $ref: "#/components/schemas/Dog"
      parameters: &a2
        - name: dogId
          in: path
          schema:
            type: string
          required: true
  /dogs-api/dogs/{dogId}:
    get:
      tags:
        - /dogs-api
      responses: *a1
      parameters: *a2
  /cats-api/cat/{catId}:
    get:
      tags:
        - /cats-api
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cat"
        "403":
          description: error
          content:
            application/json:
              schema:
                type: object
        "404":
          description: error
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: catId
          in: path
          schema:
            type: string
          required: true
        - name: limit
          in: query
          schema:
            type: number
          required: false
        - name: color
          in: query
          schema:
            type: string
          required: false
  /cats-api/cats:
    get:
      tags:
        - /cats-api
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
  /cats-api/cat:
    post:
      tags:
        - /cats-api
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cat"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cat"
  /cats-api/cated:
    get:
      tags:
        - /cats-api
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                required:
                  - id
  /cats-api/paginated/cat:
    get:
      tags:
        - /cats-api
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedList_Dog_"
  /yeet/{param}/{another}:
    get:
      tags:
        - /yeet/{param}
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: param
          in: path
          schema:
            type: string
          required: true
        - name: another
          in: path
          schema:
            type: string
          required: true
  /advanced/another/yeeted:
    get:
      tags:
        - /advanced/another
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dog"
components:
  schemas:
    ColorType:
      type: string
      enum:
        - rgb
        - hex
    AnimalType:
      type: number
      enum:
        - 0
        - 1
        - 2
    NumberedEnum:
      type: number
      enum:
        - 1
        - 2
    Color:
      type: object
      properties:
        rgb:
          type: string
        type:
          $ref: "#/components/schemas/ColorType"
        variant:
          type: string
          enum:
            - variant1
        animalType:
          $ref: "#/components/schemas/AnimalType"
        values:
          oneOf:
            - type: number
            - type: string
              enum:
                - red
            - type: string
              enum:
                - green
            - type: string
              enum:
                - blue
        number:
          $ref: "#/components/schemas/NumberedEnum"
    Dog:
      type: object
      properties:
        name:
          type: string
        height:
          type: number
        color:
          $ref: "#/components/schemas/Color"
      required:
        - name
        - height
        - color
    Animal:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    PaginatedList_Animal_:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Animal"
        count:
          type: number
      required:
        - items
        - count
    Pick_Color_9f3910d2dfe31286caa1caaee7e65f58:
      type: object
      properties:
        number:
          $ref: "#/components/schemas/NumberedEnum"
        animalType:
          $ref: "#/components/schemas/AnimalType"
    Omit_Color_57c74048a1293790849899922d09d150:
      type: object
      properties:
        rgb:
          type: string
        type:
          $ref: "#/components/schemas/ColorType"
        variant:
          type: string
          enum:
            - variant1
    Cat:
      type: object
      properties:
        name:
          type: string
        color:
          oneOf:
            - type: string
            - type: number
            - $ref: "#/components/schemas/Color"
        dog:
          $ref: "#/components/schemas/Dog"
        siblings:
          type: array
          items:
            $ref: "#/components/schemas/Animal"
        nesterd:
          type: object
          properties:
            nestedProp:
              type: string
            nestedProp2:
              type: string
          required:
            - nestedProp
        joined:
          type: object
          properties:
            joinedProp:
              type: string
            name:
              type: string
          required:
            - joinedProp
            - name
        generic:
          $ref: "#/components/schemas/PaginatedList_Animal_"
        pick:
          $ref: "#/components/schemas/Pick_Color_9f3910d2dfe31286caa1caaee7e65f58"
        omit:
          $ref: "#/components/schemas/Omit_Color_57c74048a1293790849899922d09d150"
        bool:
          type: boolean
      required:
        - name
        - color
    PaginatedList_Dog_:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Dog"
        count:
          type: number
      required:
        - items
        - count
